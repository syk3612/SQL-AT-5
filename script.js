// script.js
// Full lessons: multilingual (Marathi, Hindi, English, Varhadi, Mumbaiya, Hyderabadi)

const langNames = { 
  mr: "рдорд░рд╛рдареА", 
  hi: "рд╣рд┐рдиреНрджреА", 
  en: "English",
  vr: "рд╡рд░рд╣рд╛рдбреА",
  mb: "рдореБрдВрдмрдИрдпрд╛",
  hy: "рд╣реИрджрд░рд╛рдмрд╛рджреА",
  np: "рдирд╛рдЧрдкреБрд░реА"
};

const startTexts = {
  mr: { title: "SQL рд╢рд┐рдХрд╛рдпрд▓рд╛ рд╕реБрд░реВ рдХрд░рд╛", sub: "рдбрд╛рд╡реАрдХрдбреАрд▓ рд╡рд┐рд╖рдп рдирд┐рд╡рдбрд╛." },
  hi: { title: "SQL рд╕реАрдЦрдирд╛ рд╢реБрд░реВ рдХреАрдЬрд┐рдП", sub: "рдмрд╛рдПрдБ рддрд░рдл рд╕реЗ рдХреЛрдИ рд╡рд┐рд╖рдп рдЪреБрдиреЗрдВред" },
  en: { title: "Start Learning SQL", sub: "Pick a topic from the left." },
  vr: { title: "SQL рд╢рд┐рдХрд╛рдп рд▓рд╛ рд▓рд╛рдЧреВ рдХрд░рд╛ рд░реЗ", sub: "рдбрд╛рд╡реАрдХрдбрдЪрдВ рдЯреЙрдкрд┐рдХ рдирд┐рд╡рдб" },
  mb: { title: "SQL рд╢рд┐рдХрд╛рдпрд▓рд╛ рдЪрд╛рд▓реВ рдХрд░ рдмреЗ", sub: "рдбрд╛рд╡реНрдпрд╛ рд╕рд╛рдИрдбрдЪрд╛ рдЯреЙрдкрд┐рдХ рд╕рд┐рд▓реЗрдХреНрдЯ рдХрд░" },
  hy: { title: "SQL рд╕реАрдЦрдирд╛ рдЪрд╛рд▓реВ рдХрд░ рд░реЗ рдорд┐рдпрд╛рдБ", sub: "рдмрд╛рдпреАрдВ рддрд░рдл рдХрд╛ рдЯреЙрдкрд┐рдХ рдЪреБрди рд▓реЛ рдорд┐рдпрд╛рдБ" },
  np: { title: "SQL рд╢рд┐рдХрдп рд▓рд╛ рд╕реБрд░реВ рдХрд░ рди рдорд╛рдорд╛", sub: "рдбрд╛рд╡реНрдпрд╛ рдмрд╛рдЬреВрдиреЗ рдЯреЙрдкрд┐рдХ рдирд┐рд╡рдб." }

  
};

let currentLang = "mr"; // default

/* -------------- Helpers -------------- */
function makeTable(headers, rows) {
  let html = '<table class="sql-output"><thead><tr>';
  headers.forEach(h => html += `<th>${h}</th>`);
  html += '</tr></thead><tbody>';
  rows.forEach(r => {
    html += '<tr>';
    r.forEach(c => html += `<td>${c}</td>`);
    html += '</tr>';
  });
  html += '</tbody></table>';
  return html;
}


// Lessons
const lessons = {
  mr: [
    { id:"select", title:"SELECT рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ ЁЯНА", emoji:"", desc:"SELECT рдореНрд╣рдгрдЬреЗ рдбреЗрдЯрд╛рдмреЗрд╕ рдордзреВрди рдорд╛рд╣рд┐рддреА рдШреЗрдгреНрдпрд╛рд╕рд╛рдареА рд╡рд╛рдкрд░рддреЛ.", longDesc:"SELECT рд╕реНрдЯреЗрдЯрдореЗрдВрдЯрдЪрд╛ рдЙрдкрдпреЛрдЧ table рдордзреВрди рд╣рд╡реЗ рдЕрд╕рд▓реЗрд▓реЗ data рдорд┐рд│рд╡рдгреНрдпрд╛рд╕рд╛рдареА рдХрд░рддреЛ, рдЖрдкрдг specific columns рдирд┐рд╡рдбреВ рд╢рдХрддреЛ", example:"SELECT рдирд╛рд╡, рд╡рдп FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
    { id:"where", title:"WHERE рдХреНрд▓реЙрдЬ ЁЯФН", emoji:"", desc:"WHERE рдореНрд╣рдгрдЬреЗ рдЕрдЯ рд▓рд╛рд╡рдгреЗ.", longDesc:"WHERE рдХреНрд▓реЙрдЬрдЪрд╛ рдЙрдкрдпреЛрдЧ filter рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА рдХрд░рддреЛ. рдлрдХреНрдд specific rows select рдХрд░рдгреНрдпрд╛рд╕рд╛рдареА." , example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп = 10;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"]]} },
    { id:"orderby", title:"ORDER BY ЁЯУС", emoji:"", desc:"ORDER BY рдореНрд╣рдгрдЬреЗ рдХреНрд░рдо рд▓рд╛рд╡рдгреЗ.", longDesc:"ORDER BY рд╡рд╛рдкрд░реВрди рдбреЗрдЯрд╛ ascending рдХрд┐рдВрд╡рд╛ descending рдХреНрд░рдорд╛рдд рджрд╛рдЦрд╡рддреЛ. рдЬрд╕реЗ рд╡рдп ascending рдХреНрд░рдорд╛рдд рдкрд╛рд╣рдгреЗ.", example:"SELECT рдирд╛рд╡, рд╡рдп FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА ORDER BY рд╡рдп ASC;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд░реЛрд╣рд┐рдд","12"],["рд╕реНрдиреЗрд╣рд╛","10"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
    { id:"and", title:"AND рдХреНрд▓реЙрдЬ тЮХ", emoji:"", desc:"AND рдореНрд╣рдгрдЬреЗ рджреЛрдиреНрд╣реА рдЕрдЯреА рдкреВрд░реНрдг рд╡реНрд╣рд╛рдпрд▓рд╛ рд╣рд╡реНрдпрд╛рдд.", longDesc:"AND рд╡рд╛рдкрд░реВрди рдПрдХрд╛рд╣реВрди рдЕрдзрд┐рдХ рдЕрдЯреА рд▓рд╛рдЧреВ рдХреЗрд▓реНрдпрд╛ рдЬрд╛рддрд╛рдд. рд╕рд░реНрд╡ рдЕрдЯреА рдЦрд▒реНрдпрд╛ рдЕрд╕рд╛рд╡реНрдпрд╛рдд рддрд░ row select рд╣реЛрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп=10 AND рдирд╛рд╡='рд╕реНрдиреЗрд╣рд╛';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","10"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"]]} },
    { id:"or", title:"OR рдХреНрд▓реЙрдЬ тЪб", emoji:"", desc:"OR рдореНрд╣рдгрдЬреЗ рдПрдХ рдЕрдЯ рдкреВрд░реНрдг рдЭрд╛рд▓реА рддрд░реА рдЪрд╛рд▓рддреЗ.", longDesc:"OR рд╡рд╛рдкрд░реВрди рдПрдЦрд╛рджреА рдЕрдЯ рдЦрд▒реНрдпрд╛ рдЕрд╕рд▓реНрдпрд╛рд╕ row select рд╣реЛрддреЛ. рдЬрд╕реЗ рд╡рдп 10 рдХрд┐рдВрд╡рд╛ рдирд╛рд╡ рд░реЛрд╣рд┐рдд.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп=10 OR рдирд╛рд╡='рд░реЛрд╣рд┐рдд';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"like", title:"LIKE рдХреНрд▓реЙрдЬ ЁЯФа", emoji:"", desc:"LIKE рдореНрд╣рдгрдЬреЗ pattern match.", longDesc:"LIKE рд╡рд╛рдкрд░реВрди specific pattern match рдХрд░реВрди рдбреЗрдЯрд╛ select рдХрд░рддреЛ. рдЬрд╕реЗ рдирд╛рд╡ 'рд░' рдиреЗ рд╕реБрд░реВ рд╣реЛрдгрд╛рд░реЗ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рд╡ LIKE 'рд░%';", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
    { id:"in", title:"IN рдХреНрд▓реЙрдЬ ЁЯУж", emoji:"", desc:"IN рдореНрд╣рдгрдЬреЗ list рдордзреАрд▓ value.", longDesc:"IN рд╡рд╛рдкрд░реВрди multiple values рдордзреВрди data select рдХрд░рддреЛ. рдЬрд╕реЗ рд╡рдп 10 рдХрд┐рдВрд╡рд╛ 12.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп IN (10,12);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"between", title:"BETWEEN рдХреНрд▓реЙрдЬ ЁЯОп", emoji:"", desc:"BETWEEN рдореНрд╣рдгрдЬреЗ range рдордзреНрдпреЗ value.", longDesc:"BETWEEN рд╡рд╛рдкрд░реВрди two values рдордзреАрд▓ range select рдХрд░рддреЛ. рдЬрд╕реЗ 10 рддреЗ 12 рд╡рд░реНрд╖рд╛рдВрдЪреЗ рд╡рд┐рджреНрдпрд╛рд░реНрдереА.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп BETWEEN 10 AND 12;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рдЕрдореГрддрд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"anyall", title:"ANY рдЖрдгрд┐ ALL ЁЯМН", emoji:"", desc:"ANY рдореНрд╣рдгрдЬреЗ рдХреБрдард▓реАрд╣реА value, ALL рдореНрд╣рдгрдЬреЗ рд╕рд░реНрд╡ рдЕрдЯреА true.", longDesc:"ANY рдЖрдгрд┐ ALL рд╡рд╛рдкрд░реВрди subquery results filter рдХрд░рддреЛ. ANY рдореНрд╣рдгрдЬреЗ рдХреБрдард▓реАрд╣реА value match, ALL рдореНрд╣рдгрдЬреЗ рд╕рд░реНрд╡ match.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп = ANY (10,12);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"union", title:"UNION ЁЯдЭ", emoji:"", desc:"UNION рдореНрд╣рдгрдЬреЗ two queries merge.", longDesc:"UNION рд╡рд╛рдкрд░реВрди рджреЛрди query results рдПрдХрддреНрд░ рдХрд░рддреЛ рдЖрдгрд┐ duplicates рдХрд╛рдврддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]} },
    { id:"unionall", title:"UNION ALL ЁЯФЧ", emoji:"", desc:"UNION ALL рдореНрд╣рдгрдЬреЗ merge but duplicates retain.", longDesc:"UNION ALL рд╡рд╛рдкрд░реВрди two query results рдПрдХрддреНрд░ рдХрд░рддреЛ рдкрдг duplicates рдареЗрд╡рддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION ALL SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]} },
    { id:"intersect", title:"INTERSECT тЬВя╕П", emoji:"", desc:"INTERSECT рдореНрд╣рдгрдЬреЗ common values.", longDesc:"INTERSECT рд╡рд╛рдкрд░реВрди рджреЛрди queries рдордзреАрд▓ common rows select рдХрд░рддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA INTERSECT SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
    { id:"minus", title:"MINUS тЮЦ", emoji:"", desc:"MINUS рдореНрд╣рдгрдЬреЗ first query рдордзреНрдпреЗ рдкрдг second рдордзреНрдпреЗ рдирд╛рд╣реА.", longDesc:"MINUS рд╡рд╛рдкрд░реВрди first query рдордзреАрд▓ rows select рдХрд░рддреЛ рдЬреЗ second query рдордзреНрдпреЗ рдирд╛рд╣реАрдд.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA MINUS SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рдЕрдореГрддрд╛"]]} },
    { id:"not", title:"NOT тЭМ", emoji:"", desc:"NOT рдореНрд╣рдгрдЬреЗ рдЙрд▓рдЯ рдЕрдЯ.", longDesc:"NOT рд╡рд╛рдкрд░реВрди рдЕрдЯреА invert рдХрд░рддреЛ. рдЬрд╕реЗ, NOT IN рд╡рд╛рдкрд░реВрди specific values рд╡рдЧрд│рддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп NOT IN (10);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
    { id:"exists", title:"EXISTS тЬЕ", emoji:"", desc:"EXISTS рдореНрд╣рдгрдЬреЗ subquery result рдЖрд╣реЗ рдХрд╛ рддрдкрд╛рд╕рдгреЗ.", longDesc:"EXISTS рд╡рд╛рдкрд░реВрди рддрдкрд╛рд╕рддреЛ рдХреА subquery рдХрд╛рд╣реА rows return рдХрд░рддреЗ рдХрд╛.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>80);", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"notexists", title:"NOT EXISTS ЁЯЪл", emoji:"", desc:"NOT EXISTS рдореНрд╣рдгрдЬреЗ result рдирд╛рд╣реА рдХрд╛ рддрдкрд╛рд╕рдгреЗ.", longDesc:"NOT EXISTS рд╡рд╛рдкрд░реВрди рддрдкрд╛рд╕рддреЛ рдХреА subquery рдХрд╛рд╣реА rows return рдХрд░рдд рдирд╛рд╣реА.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE NOT EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>90);", before:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]}, after:{headers:["рдирд╛рд╡"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
    { id:"null", title:"NULL Values ЁЯХ│я╕П", emoji:"", desc:"NULL рдореНрд╣рдгрдЬреЗ рд░рд┐рдХрд╛рдордВ value.", longDesc:"NULL values рд╡рд╛рдкрд░реВрди рддрдкрд╛рд╕рддреЛ рдХреА field рдордзреНрдпреЗ рдХрд╛рд╣реА value рдирд╛рд╣реА рдХрд╛.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдкрддреНрддрд╛ IS NULL;", before:{headers:["рдирд╛рд╡","рдкрддреНрддрд╛"], rows:[["рд╕реНрдиреЗрд╣рд╛","Mumbai"],["рдЕрдореГрддрд╛",null]]}, after:{headers:["рдирд╛рд╡"], rows:[["рдЕрдореГрддрд╛"]]} },
    { id:"insert", title:"INSERT INTO тЮХ", emoji:"", desc:"INSERT рдореНрд╣рдгрдЬреЗ рдирд╡реАрди data рдЯрд╛рдХрдгреЗ.", longDesc:"INSERT INTO рд╡рд╛рдкрд░реВрди рдирд╡реАрди rows add рдХрд░рддреЛ. columns рдЖрдгрд┐ values specify рдХрд░рддреЛ.", example:"INSERT INTO рд╡рд┐рджреНрдпрд╛рд░реНрдереА (рдирд╛рд╡, рд╡рдп) VALUES ('рдЕрдЬрдп', 11);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдЬрдп","11"]]} },
    { id:"update", title:"UPDATE тЬПя╕П", emoji:"", desc:"UPDATE рдореНрд╣рдгрдЬреЗ рдЬреБрдирд╛ data рдмрджрд▓рдгреЗ.", longDesc:"UPDATE рд╡рд╛рдкрд░реВрди table рдордзреАрд▓ existing data рдмрджрд▓рддреЛ. WHERE рдХреНрд▓реЙрдЬрд╢рд┐рд╡рд╛рдп рд╕рд░реНрд╡ rows update рд╣реЛрддрд╛рдд.", example:"UPDATE рд╡рд┐рджреНрдпрд╛рд░реНрдереА SET рд╡рдп = 13 WHERE рдирд╛рд╡ = 'рд░реЛрд╣рд┐рдд';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","13"]]} },
    { id:"delete", title:"DELETE ЁЯЧСя╕П", emoji:"", desc:"DELETE рдореНрд╣рдгрдЬреЗ рдЬреБрдирд╛ data рдХрд╛рдвреВрди рдЯрд╛рдХрдгреЗ.", longDesc:"DELETE рд╡рд╛рдкрд░реВрди table рдордзреАрд▓ rows remove рдХрд░рддреЛ. WHERE рдХреНрд▓реЙрдЬрд╢рд┐рд╡рд╛рдп рд╕рд░реНрд╡ rows delete рд╣реЛрддрд╛рдд.", example:"DELETE FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рд╡ = 'рдЕрдЬрдп';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдЬрдп","11"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
    { id:"innerjoin", title:"INNER JOIN ЁЯФЧ", emoji:"", desc:"INNER JOIN рдореНрд╣рдгрдЬреЗ рджреЛрдиреНрд╣реА tables рдордзрд▓реНрдпрд╛ common rows.", longDesc:"INNER JOIN рдЪрд╛ рдЙрдкрдпреЛрдЧ рджреЛрди tables рдордзрд▓реНрдпрд╛ matching rows рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ. Common column рдЪреНрдпрд╛ рдЖрдзрд╛рд░рд╛рд╡рд░ data рдЬреЛрдбрд▓рд╛ рдЬрд╛рддреЛ.", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА INNER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛","4","88"]]}, after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"]]} },

{ id:"leftjoin", title:"LEFT JOIN тмЕя╕П", emoji:"", desc:"LEFT JOIN рдореНрд╣рдгрдЬреЗ left table рдордзрд▓реНрдпрд╛ рд╕рдЧрд│реНрдпрд╛ rows + right рдордзрд▓реЗ matching.", longDesc:"LEFT JOIN рдЪрд╛ рдЙрдкрдпреЛрдЧ left table рдордзрд▓реНрдпрд╛ рд╕рд░реНрд╡ rows рдЖрдгрдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ, рдЖрдгрд┐ рдЬрд░ right table рдордзреНрдпреЗ match рдирд╕реЗрд▓ рддрд░ NULL рдорд┐рд│рддрдВ.", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА LEFT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛",null,null]]}, after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],["рдЕрдореГрддрд╛",null]]} },

{ id:"rightjoin", title:"RIGHT JOIN тЮбя╕П", emoji:"", desc:"RIGHT JOIN рдореНрд╣рдгрдЬреЗ right table рдордзрд▓реНрдпрд╛ рд╕рдЧрд│реНрдпрд╛ rows + left рдордзрд▓реЗ matching.", longDesc:"RIGHT JOIN рдЪрд╛ рдЙрдкрдпреЛрдЧ right table рдордзрд▓реНрдпрд╛ рд╕рд░реНрд╡ rows рдЖрдгрдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ, рдЖрдгрд┐ рдЬрд░ left table рдордзреНрдпреЗ match рдирд╕реЗрд▓ рддрд░ NULL рдорд┐рд│рддрдВ.", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА RIGHT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],[null,null,"4","88"]]}, after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],[null,"88"]]} },

{ id:"fulljoin", title:"FULL OUTER JOIN ЁЯМР", emoji:"", desc:"FULL JOIN рдореНрд╣рдгрдЬреЗ рджреЛрдиреНрд╣реА tables рдордзрд▓реНрдпрд╛ рд╕рд░реНрд╡ rows.", longDesc:"FULL OUTER JOIN рдЪрд╛ рдЙрдкрдпреЛрдЧ рджреЛрдиреНрд╣реА tables рдордзрд▓реНрдпрд╛ рд╕рд░реНрд╡ rows рдЖрдгрдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ. рдЬрд┐рдереЗ match рдирд╛рд╣реА рддрд┐рдереЗ NULL рдпреЗрддреЛ.", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА FULL OUTER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛",null,null],[null,null,"4","88"]]}, after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],["рдЕрдореГрддрд╛",null],[null,"88"]]} },

{ id:"selfjoin", title:"SELF JOIN ЁЯФД", emoji:"", desc:"SELF JOIN рдореНрд╣рдгрдЬреЗ table рд▓рд╛ рд╕реНрд╡рддрдГрд╢реА рдЬреЛрдбрдгрдВ.", longDesc:"SELF JOIN рдЪрд╛ рдЙрдкрдпреЛрдЧ рдЬреЗрд╡реНрд╣рд╛ рдПрдХрд╛ table рдордзрд▓рдВ related data рдПрдХрдореЗрдХрд╛рдВрд╢реА compare рдХрд░рд╛рдпрдЪрдВ рдЕрд╕рддрдВ рддреЗрд╡реНрд╣рд╛ рд╣реЛрддреЛ.", example:"SELECT A.рдирд╛рд╡, B.рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА A JOIN рд╡рд┐рджреНрдпрд╛рд░реНрдереА B ON A.рдЙрдореНрд░ = B.рдЙрдореНрд░;", before:{headers:["id","рдирд╛рд╡","рдЙрдореНрд░"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","10"],["2","рд░реЛрд╣рд┐рдд","12"],["3","рдЕрдореГрддрд╛","12"]]}, after:{headers:["A.рдирд╛рд╡","B.рдирд╛рд╡"], rows:[["рд░реЛрд╣рд┐рдд","рдЕрдореГрддрд╛"],["рдЕрдореГрддрд╛","рд░реЛрд╣рд┐рдд"]]} },

// ЁЯЪА Aggregate Functions
{ id:"count", title:"COUNT() ЁЯФв", emoji:"", desc:"COUNT рдореНрд╣рдгрдЬреЗ rows рдореЛрдЬрдгреЗ.", longDesc:"COUNT function рдЪрд╛ рдЙрдкрдпреЛрдЧ рдПрдЦрд╛рджреНрдпрд╛ table рдордзреНрдпреЗ рдХрд┐рддреА rows рдЖрд╣реЗрдд рд╣реЗ рд╢реЛрдзрдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ.", example:"SELECT COUNT(*) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["COUNT"], rows:[["3"]]} },

{ id:"sum", title:"SUM() тЮХ", emoji:"", desc:"SUM рдореНрд╣рдгрдЬреЗ рдмреЗрд░реАрдЬ.", longDesc:"SUM function рдЪрд╛ рдЙрдкрдпреЛрдЧ numeric column рдЪрд╛ рдПрдХреВрдг рдмреЗрд░реАрдЬ рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ.", example:"SELECT SUM(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["SUM"], rows:[["33"]]} },

{ id:"avg", title:"AVG() ЁЯУК", emoji:"", desc:"AVG рдореНрд╣рдгрдЬреЗ рд╕рд░рд╛рд╕рд░реА.", longDesc:"AVG function рдЪрд╛ рдЙрдкрдпреЛрдЧ numeric column рдЪреА рд╕рд░рд╛рд╕рд░реА рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ.", example:"SELECT AVG(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["AVG"], rows:[["11"]]} },

{ id:"min", title:"MIN() тмЗя╕П", emoji:"", desc:"MIN рдореНрд╣рдгрдЬреЗ рд╕рд░реНрд╡рд╛рдд рд▓рд╣рд╛рди value.", longDesc:"MIN function рдЪрд╛ рдЙрдкрдпреЛрдЧ column рдордзрд▓рдВ рд╕рд░реНрд╡рд╛рдд рдХрдореА value рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ.", example:"SELECT MIN(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["MIN"], rows:[["10"]]} },

{ id:"max", title:"MAX() тмЖя╕П", emoji:"", desc:"MAX рдореНрд╣рдгрдЬреЗ рд╕рд░реНрд╡рд╛рдд рдореЛрдардВ value.", longDesc:"MAX function рдЪрд╛ рдЙрдкрдпреЛрдЧ column рдордзрд▓рдВ рд╕рд░реНрд╡рд╛рдд рдореЛрдардВ value рдХрд╛рдврдгреНрдпрд╛рд╕рд╛рдареА рд╣реЛрддреЛ.", example:"SELECT MAX(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["MAX"], rows:[["12"]]} },

  ],

  hi: [
      { id:"select", title:"SELECT рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ ЁЯНА", emoji:"", desc:"SELECT рдХрд╛ рдорддрд▓рдм рд╣реИ рдбреЗрдЯрд╛рдмреЗрд╕ рд╕реЗ рдЬрд╛рдирдХрд╛рд░реА рдирд┐рдХрд╛рд▓рдирд╛ред", longDesc:"SELECT рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ рдХрд╛ рдЙрдкрдпреЛрдЧ table рд╕реЗ рдЬрд╝рд░реВрд░реА data рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рд╣рдо specific columns рдЪреБрди рд╕рдХрддреЗ рд╣реИрдВред", example:"SELECT рдирд╛рдо, рдЙрдореНрд░ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
      { id:"where", title:"WHERE рдХреНрд▓реЙрдЬ ЁЯФН", emoji:"", desc:"WHERE рдХрд╛ рдорддрд▓рдм рд╣реИ рд╢рд░реНрдд рд▓рдЧрд╛рдирд╛ред", longDesc:"WHERE рдХреНрд▓реЙрдЬ рдХрд╛ рдЙрдкрдпреЛрдЧ data filter рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рд╕рд┐рд░реНрдл рд╡рд╣реА rows рдЪреБрдиреЗ рдЬрд╛рддреЗ рд╣реИрдВ рдЬреЛ condition рдкреВрд░реА рдХрд░рддреЗ рд╣реИрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░ = 10;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"]]} },
      { id:"orderby", title:"ORDER BY ЁЯУС", emoji:"", desc:"ORDER BY рдХрд╛ рдорддрд▓рдм рд╣реИ рдХреНрд░рдо рд▓рдЧрд╛рдирд╛ред", longDesc:"ORDER BY рдХрд╛ рдЙрдкрдпреЛрдЧ рдбреЗрдЯрд╛ рдХреЛ ascending рдпрд╛ descending рдХреНрд░рдо рдореЗрдВ рджрд┐рдЦрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬреИрд╕реЗ рдЙрдореНрд░ ascending рдХреНрд░рдо рдореЗрдВред", example:"SELECT рдирд╛рдо, рдЙрдореНрд░ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА ORDER BY рдЙрдореНрд░ ASC;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд░реЛрд╣рд┐рдд","12"],["рд╕реНрдиреЗрд╣рд╛","10"]]}, after:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
      { id:"and", title:"AND рдХреНрд▓реЙрдЬ тЮХ", emoji:"", desc:"AND рдХрд╛ рдорддрд▓рдм рд╣реИ рджреЛрдиреЛрдВ рд╢рд░реНрддреЗрдВ рдкреВрд░реА рд╣реЛрдиреА рдЪрд╛рд╣рд┐рдПред", longDesc:"AND рдХрд╛ рдЙрдкрдпреЛрдЧ рдПрдХ рд╕реЗ рдЕрдзрд┐рдХ conditions рдХреЛ рдЬреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рддрднреА row рдЪреБрдирд╛ рдЬрд╛рддрд╛ рд╣реИ рдЬрдм рд╕рдм conditions true рд╣реЛрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░=10 AND рдирд╛рдо='рд╕реНрдиреЗрд╣рд╛';", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","10"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"]]} },
      { id:"or", title:"OR рдХреНрд▓реЙрдЬ тЪб", emoji:"", desc:"OR рдХрд╛ рдорддрд▓рдм рд╣реИ рдХреЛрдИ рднреА рдПрдХ рд╢рд░реНрдд рдкреВрд░реА рд╣реЛрдиреА рдЪрд╛рд╣рд┐рдПред", longDesc:"OR рдХрд╛ рдЙрдкрдпреЛрдЧ рддрдм рд╣реЛрддрд╛ рд╣реИ рдЬрдм рдХреЛрдИ рднреА condition true рд╣реЛ рддреЛ row рдЪреБрдирд╛ рдЬрд╛рддрд╛ рд╣реИред рдЬреИрд╕реЗ рдЙрдореНрд░ 10 рдпрд╛ рдирд╛рдо рд░реЛрд╣рд┐рддред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░=10 OR рдирд╛рдо='рд░реЛрд╣рд┐рдд';", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"like", title:"LIKE рдХреНрд▓реЙрдЬ ЁЯФа", emoji:"", desc:"LIKE рдХрд╛ рдорддрд▓рдм рд╣реИ pattern matchред", longDesc:"LIKE рдХрд╛ рдЙрдкрдпреЛрдЧ pattern match рдХрд░рдХреЗ rows рдЪреБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬреИрд╕реЗ рдирд╛рдо 'рд░' рд╕реЗ рд╢реБрд░реВ рд╣реЛред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рдо LIKE 'рд░%';", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
      { id:"in", title:"IN рдХреНрд▓реЙрдЬ ЁЯУж", emoji:"", desc:"IN рдХрд╛ рдорддрд▓рдм рд╣реИ list рдореЗрдВ рд╕реЗ value рдЪреБрдирдирд╛ред", longDesc:"IN рдХрд╛ рдЙрдкрдпреЛрдЧ multiple values рдореЗрдВ рд╕реЗ rows рдЪреБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬреИрд╕реЗ рдЙрдореНрд░ 10 рдпрд╛ 12ред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░ IN (10,12);", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"between", title:"BETWEEN рдХреНрд▓реЙрдЬ ЁЯОп", emoji:"", desc:"BETWEEN рдХрд╛ рдорддрд▓рдм рд╣реИ range рдХреЗ рдмреАрдЪ рдХрд╛ valueред", longDesc:"BETWEEN рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛ values рдХреЗ рдмреАрдЪ рдХреЗ rows рдЪреБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬреИрд╕реЗ 10 рд╕реЗ 12 рд╕рд╛рд▓ рдХреЗ рд╡рд┐рджреНрдпрд╛рд░реНрдереАред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░ BETWEEN 10 AND 12;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рдЕрдореГрддрд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"anyall", title:"ANY рдФрд░ ALL ЁЯМН", emoji:"", desc:"ANY рдХрд╛ рдорддрд▓рдм рд╣реИ рдХреЛрдИ рднреА value, ALL рдХрд╛ рдорддрд▓рдм рд╣реИ рд╕рднреА рд╢рд░реНрддреЗрдВ trueред", longDesc:"ANY рдФрд░ ALL рдХрд╛ рдЙрдкрдпреЛрдЧ subquery results filter рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред ANY рдХрд╛ рдорддрд▓рдм рд╣реИ рдХреЛрдИ рднреА value match рд╣реЛ, ALL рдХрд╛ рдорддрд▓рдм рд╣реИ рд╕рдм match рд╣реЛрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░ = ANY (10,12);", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"union", title:"UNION ЁЯдЭ", emoji:"", desc:"UNION рдХрд╛ рдорддрд▓рдм рд╣реИ рджреЛ queries merge рдХрд░рдирд╛ред", longDesc:"UNION рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛ query results рдХреЛ рдЬреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдФрд░ duplicates рд╣рдЯрд╛ рджреЗрддрд╛ рд╣реИред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]} },
      { id:"unionall", title:"UNION ALL ЁЯФЧ", emoji:"", desc:"UNION ALL рдХрд╛ рдорддрд▓рдм рд╣реИ merge рдХрд░рдирд╛ рд▓реЗрдХрд┐рди duplicates рд░рдЦрдирд╛ред", longDesc:"UNION ALL рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛ query results рдХреЛ рдЬреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдФрд░ duplicates рднреА рд░рдЦрддреЗ рд╣реИрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION ALL SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"],["рд╕реНрдиреЗрд╣рд╛"]]} },
      { id:"intersect", title:"INTERSECT тЬВя╕П", emoji:"", desc:"INTERSECT рдХрд╛ рдорддрд▓рдм рд╣реИ common valuesред", longDesc:"INTERSECT рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛ queries рдореЗрдВ рдореМрдЬреВрдж common rows рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA INTERSECT SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
      { id:"minus", title:"MINUS тЮЦ", emoji:"", desc:"MINUS рдХрд╛ рдорддрд▓рдм рд╣реИ first query рдореЗрдВ рдореМрдЬреВрдж рд▓реЗрдХрд┐рди second рдореЗрдВ рдирд╣реАрдВред", longDesc:"MINUS рдХрд╛ рдЙрдкрдпреЛрдЧ first query рдХреА rows рдЪреБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдЬреЛ second query рдореЗрдВ рдирд╣реАрдВ рд╣реИрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA MINUS SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"],["рдЕрдореГрддрд╛"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рдЕрдореГрддрд╛"]]} },
      { id:"not", title:"NOT тЭМ", emoji:"", desc:"NOT рдХрд╛ рдорддрд▓рдм рд╣реИ рдЙрд▓рдЯреА рд╢рд░реНрддред", longDesc:"NOT рдХрд╛ рдЙрдкрдпреЛрдЧ рд╢рд░реНрдд рдХреЛ рдЙрд▓рдЯрдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬреИрд╕реЗ, NOT IN рдХрд╛ рдЙрдкрдпреЛрдЧ specific values рд╣рдЯрд╛рдиреЗ рдХреЗ рд▓рд┐рдПред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдЙрдореНрд░ NOT IN (10);", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд░реЛрд╣рд┐рдд"]]} },
      { id:"exists", title:"EXISTS тЬЕ", emoji:"", desc:"EXISTS рдХрд╛ рдорддрд▓рдм рд╣реИ subquery рдХрд╛ result рд╣реИ рдпрд╛ рдирд╣реАрдВред", longDesc:"EXISTS рдХрд╛ рдЙрдкрдпреЛрдЧ рдпрд╣ рдЬрд╛рдВрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдХрд┐ subquery рдХреБрдЫ rows return рдХрд░рддреА рд╣реИ рдпрд╛ рдирд╣реАрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>80);", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"notexists", title:"NOT EXISTS ЁЯЪл", emoji:"", desc:"NOT EXISTS рдХрд╛ рдорддрд▓рдм рд╣реИ subquery result рдирд╣реАрдВ рд╣реИред", longDesc:"NOT EXISTS рдХрд╛ рдЙрдкрдпреЛрдЧ рдпрд╣ рдЬрд╛рдВрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдХрд┐ subquery рдХреЛрдИ rows return рдирд╣реАрдВ рдХрд░рддреАред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE NOT EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>90);", before:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]}, after:{headers:["рдирд╛рдо"], rows:[["рд╕реНрдиреЗрд╣рд╛"],["рд░реЛрд╣рд┐рдд"]]} },
      { id:"null", title:"NULL Values ЁЯХ│я╕П", emoji:"", desc:"NULL рдХрд╛ рдорддрд▓рдм рд╣реИ рдЦрд╛рд▓реА valueред", longDesc:"NULL values рдХрд╛ рдЙрдкрдпреЛрдЧ рдпрд╣ рдЬрд╛рдВрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ рдХрд┐ field рдореЗрдВ рдХреБрдЫ value рд╣реИ рдпрд╛ рдирд╣реАрдВред", example:"SELECT рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдкрддрд╛ IS NULL;", before:{headers:["рдирд╛рдо","рдкрддрд╛"], rows:[["рд╕реНрдиреЗрд╣рд╛","Mumbai"],["рдЕрдореГрддрд╛",null]]}, after:{headers:["рдирд╛рдо"], rows:[["рдЕрдореГрддрд╛"]]} },
      { id:"insert", title:"INSERT INTO тЮХ", emoji:"", desc:"INSERT рдХрд╛ рдорддрд▓рдм рд╣реИ рдирдпрд╛ data рдбрд╛рд▓рдирд╛ред", longDesc:"INSERT INTO рдХрд╛ рдЙрдкрдпреЛрдЧ рдирдП rows add рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред columns рдФрд░ values specify рдХрд┐рдП рдЬрд╛рддреЗ рд╣реИрдВред", example:"INSERT INTO рд╡рд┐рджреНрдпрд╛рд░реНрдереА (рдирд╛рдо, рдЙрдореНрд░) VALUES ('рдЕрдЬрдп', 11);", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдЬрдп","11"]]} },
      { id:"update", title:"UPDATE тЬПя╕П", emoji:"", desc:"UPDATE рдХрд╛ рдорддрд▓рдм рд╣реИ рдкреБрд░рд╛рдирд╛ data рдмрджрд▓рдирд╛ред", longDesc:"UPDATE рдХрд╛ рдЙрдкрдпреЛрдЧ table рдореЗрдВ рдореМрдЬреВрдж data рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред WHERE рдХреНрд▓реЙрдЬ рдирд╛ рд▓рдЧрд╛рдиреЗ рдкрд░ рд╕рднреА rows рдмрджрд▓ рдЬрд╛рддреЗ рд╣реИрдВред", example:"UPDATE рд╡рд┐рджреНрдпрд╛рд░реНрдереА SET рдЙрдореНрд░ = 13 WHERE рдирд╛рдо = 'рд░реЛрд╣рд┐рдд';", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]}, after:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","13"]]} },
      { id:"delete", title:"DELETE ЁЯЧСя╕П", emoji:"", desc:"DELETE рдХрд╛ рдорддрд▓рдм рд╣реИ рдкреБрд░рд╛рдирд╛ data рд╣рдЯрд╛рдирд╛ред", longDesc:"DELETE рдХрд╛ рдЙрдкрдпреЛрдЧ table рдХреА rows рд╣рдЯрд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред WHERE рдХреНрд▓реЙрдЬ рдирд╛ рд▓рдЧрд╛рдиреЗ рдкрд░ рд╕рднреА rows delete рд╣реЛ рдЬрд╛рддреЗ рд╣реИрдВред", example:"DELETE FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рдо = 'рдЕрдЬрдп';", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдЬрдп","11"]]}, after:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"]]} },
      { id:"innerjoin", title:"INNER JOIN ЁЯФЧ", emoji:"", desc:"INNER JOIN рдХрд╛ рдорддрд▓рдм рд╣реИ рджреЛрдиреЛрдВ tables рдореЗрдВ common rowsред", longDesc:"INNER JOIN рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛ tables рдХреЗ рдмреАрдЪ matching rows рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред Common column рдХреЗ рдЖрдзрд╛рд░ рдкрд░ data рдЬреБрдбрд╝рддрд╛ рд╣реИред", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рдо, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА INNER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рдо","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛","4","88"]]}, after:{headers:["рдирд╛рдо","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"]]} },
      { id:"leftjoin", title:"LEFT JOIN тмЕя╕П", emoji:"", desc:"LEFT JOIN рдХрд╛ рдорддрд▓рдм рд╣реИ left table рдХреА рд╕рд╛рд░реА rows + right рдХреА matchingред", longDesc:"LEFT JOIN рдХрд╛ рдЙрдкрдпреЛрдЧ left table рдХреА рд╕рднреА rows рд▓рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ, рдФрд░ рдЕрдЧрд░ right table рдореЗрдВ match рди рдорд┐рд▓реЗ рддреЛ NULL рдЖрддрд╛ рд╣реИред", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рдо, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА LEFT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рдо","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛",null,null]]}, after:{headers:["рдирд╛рдо","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],["рдЕрдореГрддрд╛",null]]} },
      { id:"rightjoin", title:"RIGHT JOIN тЮбя╕П", emoji:"", desc:"RIGHT JOIN рдХрд╛ рдорддрд▓рдм рд╣реИ right table рдХреА рд╕рд╛рд░реА rows + left рдХреА matchingред", longDesc:"RIGHT JOIN рдХрд╛ рдЙрдкрдпреЛрдЧ right table рдХреА рд╕рднреА rows рд▓рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИ, рдФрд░ рдЕрдЧрд░ left table рдореЗрдВ match рди рдорд┐рд▓реЗ рддреЛ NULL рдЖрддрд╛ рд╣реИред", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рдо, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА RIGHT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рдо","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],[null,null,"4","88"]]}, after:{headers:["рдирд╛рдо","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],[null,"88"]]} },
      { id:"fulljoin", title:"FULL OUTER JOIN ЁЯМР", emoji:"", desc:"FULL JOIN рдХрд╛ рдорддрд▓рдм рд╣реИ рджреЛрдиреЛрдВ tables рдХреА рд╕рд╛рд░реА rowsред", longDesc:"FULL OUTER JOIN рдХрд╛ рдЙрдкрдпреЛрдЧ рджреЛрдиреЛрдВ tables рдХреА рд╕рднреА rows рд▓рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред рдЬрд╣рд╛рдБ match рдирд╣реАрдВ рд╣реИ рд╡рд╣рд╛рдБ NULL рдЖрддрд╛ рд╣реИред", example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рдо, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА FULL OUTER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рдо","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","1","85"],["2","рд░реЛрд╣рд┐рдд","2","90"],["3","рдЕрдореГрддрд╛",null,null],[null,null,"4","88"]]}, after:{headers:["рдирд╛рдо","рдЕрдВрдХ"], rows:[["рд╕реНрдиреЗрд╣рд╛","85"],["рд░реЛрд╣рд┐рдд","90"],["рдЕрдореГрддрд╛",null],[null,"88"]]} },
      { id:"selfjoin", title:"SELF JOIN ЁЯФД", emoji:"", desc:"SELF JOIN рдХрд╛ рдорддрд▓рдм рд╣реИ table рдХреЛ рдЦреБрдж рд╕реЗ рдЬреЛрдбрд╝рдирд╛ред", longDesc:"SELF JOIN рдХрд╛ рдЙрдкрдпреЛрдЧ рддрдм рд╣реЛрддрд╛ рд╣реИ рдЬрдм рдПрдХ рд╣реА table рдХреЗ рдЕрдВрджрд░ рд╕реЗ related data compare рдХрд░рдирд╛ рд╣реЛрддрд╛ рд╣реИред", example:"SELECT A.рдирд╛рдо, B.рдирд╛рдо FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА A JOIN рд╡рд┐рджреНрдпрд╛рд░реНрдереА B ON A.рдЙрдореНрд░ = B.рдЙрдореНрд░;", before:{headers:["id","рдирд╛рдо","рдЙрдореНрд░"], rows:[["1","рд╕реНрдиреЗрд╣рд╛","10"],["2","рд░реЛрд╣рд┐рдд","12"],["3","рдЕрдореГрддрд╛","12"]]}, after:{headers:["A.рдирд╛рдо","B.рдирд╛рдо"], rows:[["рд░реЛрд╣рд┐рдд","рдЕрдореГрддрд╛"],["рдЕрдореГрддрд╛","рд░реЛрд╣рд┐рдд"]]} },

      // ЁЯЪА Aggregate Functions
      { id:"count", title:"COUNT() ЁЯФв", emoji:"", desc:"COUNT рдХрд╛ рдорддрд▓рдм рд╣реИ rows рдЧрд┐рдирдирд╛ред", longDesc:"COUNT function рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рд╕реА table рдореЗрдВ рдХрд┐рддрдиреА rows рд╣реИрдВ рдпрд╣ рдкрддрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT COUNT(*) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["COUNT"], rows:[["3"]]} },
      { id:"sum", title:"SUM() тЮХ", emoji:"", desc:"SUM рдХрд╛ рдорддрд▓рдм рд╣реИ рдЬреЛрдбрд╝ред", longDesc:"SUM function рдХрд╛ рдЙрдкрдпреЛрдЧ numeric column рдХрд╛ total рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT SUM(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["SUM"], rows:[["33"]]} },
      { id:"avg", title:"AVG() ЁЯУК", emoji:"", desc:"AVG рдХрд╛ рдорддрд▓рдм рд╣реИ average рдирд┐рдХрд╛рд▓рдирд╛ред", longDesc:"AVG function рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рд╕реА numeric column рдХрд╛ рдФрд╕рдд рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT AVG(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["AVG"], rows:[["11"]]} },
      { id:"min", title:"MIN() тмЗя╕П", emoji:"", desc:"MIN рдХрд╛ рдорддрд▓рдм рд╣реИ рд╕рдмрд╕реЗ рдЫреЛрдЯрд╛ valueред", longDesc:"MIN function рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рд╕реА column рдХрд╛ рд╕рдмрд╕реЗ рдЫреЛрдЯрд╛ value рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT MIN(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["MIN"], rows:[["10"]]} },
      { id:"max", title:"MAX() тмЖя╕П", emoji:"", desc:"MAX рдХрд╛ рдорддрд▓рдм рд╣реИ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ valueред", longDesc:"MAX function рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рд╕реА column рдХрд╛ рд╕рдмрд╕реЗ рдмрдбрд╝рд╛ value рдирд┐рдХрд╛рд▓рдиреЗ рдХреЗ рд▓рд┐рдП рд╣реЛрддрд╛ рд╣реИред", example:"SELECT MAX(рдЙрдореНрд░) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рдо","рдЙрдореНрд░"], rows:[["рд╕реНрдиреЗрд╣рд╛","10"],["рд░реЛрд╣рд┐рдд","12"],["рдЕрдореГрддрд╛","11"]]}, after:{headers:["MAX"], rows:[["12"]]} },
  ],
  en: [
    { id:"select", title:"SELECT Statement ЁЯНА", emoji:"", desc:"SELECT means fetching data from database.", longDesc:"The SELECT statement is used to fetch required data from a table. We can choose specific columns.", example:"SELECT name, age FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]} },

    { id:"where", title:"WHERE Clause ЁЯФН", emoji:"", desc:"WHERE means applying condition.", longDesc:"The WHERE clause is used to filter data. Only those rows are chosen which satisfy the condition.", example:"SELECT name FROM Students WHERE age = 10;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["Name"], rows:[["Sneha"]]} },

    { id:"orderby", title:"ORDER BY ЁЯУС", emoji:"", desc:"ORDER BY means sorting.", longDesc:"ORDER BY is used to display data in ascending or descending order. For example, age in ascending order.", example:"SELECT name, age FROM Students ORDER BY age ASC;", before:{headers:["Name","Age"], rows:[["Rohit","12"],["Sneha","10"]]}, after:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]} },

    { id:"and", title:"AND Clause тЮХ", emoji:"", desc:"AND means both conditions must be true.", longDesc:"AND is used to combine multiple conditions. A row is chosen only if all conditions are true.", example:"SELECT name FROM Students WHERE age=10 AND name='Sneha';", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","10"]]}, after:{headers:["Name"], rows:[["Sneha"]]} },

    { id:"or", title:"OR Clause тЪб", emoji:"", desc:"OR means any one condition should be true.", longDesc:"OR is used when a row should be chosen if any condition is true. For example, age 10 or name Rohit.", example:"SELECT name FROM Students WHERE age=10 OR name='Rohit';", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"]]} },

    { id:"like", title:"LIKE Clause ЁЯФа", emoji:"", desc:"LIKE means pattern match.", longDesc:"LIKE is used to match a pattern for choosing rows. For example, names starting with 'R'.", example:"SELECT name FROM Students WHERE name LIKE 'R%';", before:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["Name"], rows:[["Rohit"]]} },

    { id:"in", title:"IN Clause ЁЯУж", emoji:"", desc:"IN means choosing from a list of values.", longDesc:"IN is used to choose rows where values match any from a given list. For example, ages 10 or 12.", example:"SELECT name FROM Students WHERE age IN (10,12);", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"]]} },

    { id:"between", title:"BETWEEN Clause ЁЯОп", emoji:"", desc:"BETWEEN means value within a range.", longDesc:"BETWEEN is used to choose rows with values between two numbers. For example, students aged 10 to 12.", example:"SELECT name FROM Students WHERE age BETWEEN 10 AND 12;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["Name"], rows:[["Sneha"],["Amruta"],["Rohit"]]} },

    { id:"anyall", title:"ANY and ALL ЁЯМН", emoji:"", desc:"ANY means any one value, ALL means all conditions true.", longDesc:"ANY and ALL are used for filtering subquery results. ANY = match any value, ALL = match all values.", example:"SELECT name FROM Students WHERE age = ANY (10,12);", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"]]} },

    { id:"union", title:"UNION ЁЯдЭ", emoji:"", desc:"UNION means merging two queries.", longDesc:"UNION is used to combine results of two queries and remove duplicates.", example:"SELECT name FROM StudentsA UNION SELECT name FROM StudentsB;", before:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"]]} },

    { id:"unionall", title:"UNION ALL ЁЯФЧ", emoji:"", desc:"UNION ALL means merge but keep duplicates.", longDesc:"UNION ALL is used to combine results of two queries and also keep duplicates.", example:"SELECT name FROM StudentsA UNION ALL SELECT name FROM StudentsB;", before:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]} },

    { id:"intersect", title:"INTERSECT тЬВя╕П", emoji:"", desc:"INTERSECT means common values.", longDesc:"INTERSECT is used to get common rows between two queries.", example:"SELECT name FROM StudentsA INTERSECT SELECT name FROM StudentsB;", before:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["Name"], rows:[["Rohit"]]} },

    { id:"minus", title:"MINUS тЮЦ", emoji:"", desc:"MINUS means present in first query but not in second.", longDesc:"MINUS is used to select rows that exist in the first query but not in the second.", example:"SELECT name FROM StudentsA MINUS SELECT name FROM StudentsB;", before:{headers:["Name"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["Name"], rows:[["Sneha"],["Amruta"]]} },

    { id:"not", title:"NOT тЭМ", emoji:"", desc:"NOT means opposite condition.", longDesc:"NOT is used to negate a condition. For example, NOT IN removes specific values.", example:"SELECT name FROM Students WHERE age NOT IN (10);", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["Name"], rows:[["Rohit"]]} },

    { id:"exists", title:"EXISTS тЬЕ", emoji:"", desc:"EXISTS means subquery has result or not.", longDesc:"EXISTS is used to check if a subquery returns any rows.", example:"SELECT name FROM Students WHERE EXISTS (SELECT 1 FROM Marks WHERE Marks>80);", before:{headers:["Name"], rows:[["Sneha"],["Rohit"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"]]} },

    { id:"notexists", title:"NOT EXISTS ЁЯЪл", emoji:"", desc:"NOT EXISTS means subquery has no result.", longDesc:"NOT EXISTS is used to check if a subquery does not return any rows.", example:"SELECT name FROM Students WHERE NOT EXISTS (SELECT 1 FROM Marks WHERE Marks>90);", before:{headers:["Name"], rows:[["Sneha"],["Rohit"]]}, after:{headers:["Name"], rows:[["Sneha"],["Rohit"]]} },

    { id:"null", title:"NULL Values ЁЯХ│я╕П", emoji:"", desc:"NULL means empty value.", longDesc:"NULL is used to check if a field has a value or not.", example:"SELECT name FROM Students WHERE address IS NULL;", before:{headers:["Name","Address"], rows:[["Sneha","Mumbai"],["Amruta",null]]}, after:{headers:["Name"], rows:[["Amruta"]]} },

    { id:"insert", title:"INSERT INTO тЮХ", emoji:"", desc:"INSERT means adding new data.", longDesc:"INSERT INTO is used to add new rows. Columns and values are specified.", example:"INSERT INTO Students (name, age) VALUES ('Ajay', 11);", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Ajay","11"]]} },

    { id:"update", title:"UPDATE тЬПя╕П", emoji:"", desc:"UPDATE means modifying old data.", longDesc:"UPDATE is used to modify existing data in a table. Without WHERE clause, all rows are updated.", example:"UPDATE Students SET age = 13 WHERE name = 'Rohit';", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","13"]]} },

    { id:"delete", title:"DELETE ЁЯЧСя╕П", emoji:"", desc:"DELETE means removing old data.", longDesc:"DELETE is used to delete rows from a table. Without WHERE clause, all rows are deleted.", example:"DELETE FROM Students WHERE name = 'Ajay';", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Ajay","11"]]}, after:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"]]} },

    { id:"innerjoin", title:"INNER JOIN ЁЯФЧ", emoji:"", desc:"INNER JOIN means common rows in both tables.", longDesc:"INNER JOIN is used to get matching rows between two tables based on a common column.", example:"SELECT Students.name, Marks.score FROM Students INNER JOIN Marks ON Students.id = Marks.sid;", before:{headers:["Students.id","Name","Marks.sid","Score"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta","4","88"]]}, after:{headers:["Name","Score"], rows:[["Sneha","85"],["Rohit","90"]]} },

    { id:"leftjoin", title:"LEFT JOIN тмЕя╕П", emoji:"", desc:"LEFT JOIN means all rows from left + matching from right.", longDesc:"LEFT JOIN is used to return all rows from left table, with NULL if no match in right table.", example:"SELECT Students.name, Marks.score FROM Students LEFT JOIN Marks ON Students.id = Marks.sid;", before:{headers:["Students.id","Name","Marks.sid","Score"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta",null,null]]}, after:{headers:["Name","Score"], rows:[["Sneha","85"],["Rohit","90"],["Amruta",null]]} },

    { id:"rightjoin", title:"RIGHT JOIN тЮбя╕П", emoji:"", desc:"RIGHT JOIN means all rows from right + matching from left.", longDesc:"RIGHT JOIN is used to return all rows from right table, with NULL if no match in left table.", example:"SELECT Students.name, Marks.score FROM Students RIGHT JOIN Marks ON Students.id = Marks.sid;", before:{headers:["Students.id","Name","Marks.sid","Score"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],[null,null,"4","88"]]}, after:{headers:["Name","Score"], rows:[["Sneha","85"],["Rohit","90"],[null,"88"]]} },

    { id:"fulljoin", title:"FULL OUTER JOIN ЁЯМР", emoji:"", desc:"FULL JOIN means all rows from both tables.", longDesc:"FULL OUTER JOIN is used to return all rows from both tables. Where there is no match, NULL is returned.", example:"SELECT Students.name, Marks.score FROM Students FULL OUTER JOIN Marks ON Students.id = Marks.sid;", before:{headers:["Students.id","Name","Marks.sid","Score"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta",null,null],[null,null,"4","88"]]}, after:{headers:["Name","Score"], rows:[["Sneha","85"],["Rohit","90"],["Amruta",null],[null,"88"]]} },

    { id:"selfjoin", title:"SELF JOIN ЁЯФД", emoji:"", desc:"SELF JOIN means joining table with itself.", longDesc:"SELF JOIN is used when comparing related data within the same table.", example:"SELECT A.name, B.name FROM Students A JOIN Students B ON A.age = B.age;", before:{headers:["id","Name","Age"], rows:[["1","Sneha","10"],["2","Rohit","12"],["3","Amruta","12"]]}, after:{headers:["A.Name","B.Name"], rows:[["Rohit","Amruta"],["Amruta","Rohit"]]} },

    // ЁЯЪА Aggregate Functions
    { id:"count", title:"COUNT() ЁЯФв", emoji:"", desc:"COUNT means counting rows.", longDesc:"COUNT function is used to know how many rows are in a table.", example:"SELECT COUNT(*) FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["COUNT"], rows:[["3"]]} },

    { id:"sum", title:"SUM() тЮХ", emoji:"", desc:"SUM means addition.", longDesc:"SUM function is used to calculate the total of a numeric column.", example:"SELECT SUM(Age) FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["SUM"], rows:[["33"]]} },

    { id:"avg", title:"AVG() ЁЯУК", emoji:"", desc:"AVG means calculating average.", longDesc:"AVG function is used to calculate the average of a numeric column.", example:"SELECT AVG(Age) FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["AVG"], rows:[["11"]]} },

    { id:"min", title:"MIN() тмЗя╕П", emoji:"", desc:"MIN means smallest value.", longDesc:"MIN function is used to find the smallest value in a column.", example:"SELECT MIN(Age) FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["MIN"], rows:[["10"]]} },

    { id:"max", title:"MAX() тмЖя╕П", emoji:"", desc:"MAX means largest value.", longDesc:"MAX function is used to find the largest value in a column.", example:"SELECT MAX(Age) FROM Students;", before:{headers:["Name","Age"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["MAX"], rows:[["12"]]} },
]
,

  vr: [
{ id:"select", title:"SELECT рд╕реНрдЯреЗрдЯрдореЗрдВрдЯ ЁЯНА", emoji:"", desc:"Abe dengnya SELECT рдореНрд╣рдВрдЬреЗ рдбреЗрдЯрд╛рдмреЗрд╕ рдордзрдирдВ рдорд╛рд╣рд┐рддреА рдЙрдЪрд▓рд╛рдпрдЪрдВ рдХрд╛рдо.", longDesc:"рднрд╛рдИрддрд╛рдб SELECT рд╡рд╛рдкрд░рддрд╛рдд рдЯреЗрдмрд▓ рдордзрдирдВ рд╣рд╡ рддреЗ data рдЙрдЪрд▓рд╛рдпрд╛. рдЭрдХрд╛рд╕ columns рдирд┐рд╡рдбреВрди рддрд╡рдВрдЧреВрди рдХрд╛рдврд╛рдпрдЪрдВ.", example:"SELECT рдирд╛рд╡, рд╡рдп FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]} },

{ id:"where", title:"WHERE рдХреНрд▓реЙрдЬ ЁЯФН", emoji:"", desc:"Abe jhakola WHERE рдореНрд╣рдВрдЬреЗ рдЕрдЯ рдШрд╛рд▓рд╛рдпрдЪреА.", longDesc:"WHERE рд╡рд╛рдкрд░реВрди bhaitad data рдлрд┐рд▓реНрдЯрд░ рдХрд░рддрд╛рдд. Row рдлрдХреНрдд рддреЗрд╡реНрд╣рд╛рдЪ рджрд┐рд╕рд▓рд╛ рдЬрдВ рдЕрдЯ рдЦрд░рдВ рд▓рд╛рдЧрд▓реА.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп = 10;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"]]} },

{ id:"orderby", title:"ORDER BY ЁЯУС", emoji:"", desc:"ORDER BY рдореНрд╣рдВрдЬреЗ abe pongya data рд▓рд╛ рд▓рд╛рдЗрди рд▓рд╛рд╡рдгрдВ.", longDesc:"ORDER BY рдЯрд╛рдХрд▓рд╛ рдХреА rows ascending рд╡рд╛ descending рдореНрд╣рдгрдЬреЗрдЪ рдЪрдврддрд╛-рдЙрддрд░рддрд╛ рдХреНрд░рдо рд▓рд╛рд╡рддрд╛рдд.", example:"SELECT рдирд╛рд╡, рд╡рдп FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА ORDER BY рд╡рдп ASC;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Rohit","12"],["Sneha","10"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]} },

{ id:"and", title:"AND рдХреНрд▓реЙрдЬ тЮХ", emoji:"", desc:"AND рдореНрд╣рдВрдЬреЗ abe bhaitad рджреЛрдирд╣реА рдЕрдЯреА рдЦрд░рдпрд╛ рд▓рд╛рдЧрд▓реНрдпрд╛ рддрд░рдЪ рдЪрд╛рд▓рддрдВ.", longDesc:"AND рдХреНрд▓реЙрдЬ рдЯрд╛рдХрд▓рдВ рдХреА рдЭрдХрд╛рд╕ рд╕рдЧрд│реНрдпрд╛ conditions рдЦрд░рдВ рд╣рд╡реНрдпрд╛рдд, рдирд╛рд╣реАрддрд░ рдмреЛрдВрдмрд▓рдВ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп=10 AND рдирд╛рд╡='Sneha';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","10"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"]]} },

{ id:"or", title:"OR рдХреНрд▓реЙрдЬ тЪб", emoji:"", desc:"OR рдореНрд╣рдВрдЬреЗ abe dengnya рдПрдХ рддрд░реА рдЕрдЯ рдЦрд░рдВ рдЖрд▓рдВ рдХреА рдЭрд╛рд▓рдВ.", longDesc:"OR рд╡рд╛рдкрд░рддрд╛рдд рддреЗрд╡реНрд╣рд╛ рдХреЛрдгрддреАрд╣реА condition true рдЕрд╕рд▓реА рддрд░реА row рджрд┐рд╕рдирд╛рд░.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп=10 OR рдирд╛рд╡='Rohit';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]} },

{ id:"like", title:"LIKE рдХреНрд▓реЙрдЬ ЁЯФа", emoji:"", desc:"LIKE рдореНрд╣рдВрдЬреЗ abe pongya pattern match рдХрд░рд╛рдпрдЪрдВ.", longDesc:"LIKE рд╡рд╛рдкрд░рддреЛ рдЬрдВ рдкреЕрдЯрд░реНрдирдирдВ rows рдУрд│рдЦрд╛рдпрдЪреЗрдд. рдЬрд╕рдВ рдирд╛рд╡ тАШRтАЩ рдирдВ рд╕реБрд░реВ рдЭрд╛рд▓рдВ рдХрд╛.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рд╡ LIKE 'R%';", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Rohit"]]} },

{ id:"in", title:"IN рдХреНрд▓реЙрдЬ ЁЯУж", emoji:"", desc:"IN рдореНрд╣рдВрдЬреЗ рдЭрдХрд╛рд╕ list рдордзреНрдирдВ рдирд┐рд╡рдбрдгрдВ.", longDesc:"IN рд╡рд╛рдкрд░реВрди abe dengnya рдард░рд╛рд╡реАрдХ values рдкрдХрдбреВрди row рджрд┐рд╕рддреЛ. рдЬрд╕рдВ рд╡рдп 10 рдХрд┐рдВрд╡рд╛ 12.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп IN (10,12);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]} },

{ id:"between", title:"BETWEEN рдХреНрд▓реЙрдЬ ЁЯОп", emoji:"", desc:"BETWEEN рдореНрд╣рдВрдЬреЗ рджреЛрди value рдордзрд▓рдВ рднрд╛рдИрддрд╛рдб.", longDesc:"BETWEEN рд╡рд╛рдкрд░рд▓рдВ рдХреА рджреЛрди value рдЪреНрдпрд╛ рд╣рджреНрджреАрддрд▓рдВ data рджрд┐рд╕рддрдВ. рд╣реЗрдЪ рдЭрдХрд╛рд╕ 10 рддреЗ 12 рд╡рдп.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп BETWEEN 10 AND 12;", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Amruta"],["Rohit"]]} },

{ id:"anyall", title:"ANY рдЖрдгрд┐ ALL ЁЯМН", emoji:"", desc:"ANY рдореНрд╣рдВрдЬреЗ abe pongya рдПрдХ рдЬреБрд│рд▓рдВ рддрд░реА рдЪрд╛рд▓рддрдВ, ALL рдореНрд╣рдВрдЬреЗ рд╕рдЧрд│рдВ рдЬреБрд│рд╛рдпрд▓рд╛рдЪ рд╣рд╡.", longDesc:"ANY рд╡рд╛ ALL subquery рд╕реЛрдмрдд filter рдХрд░рддрдВ. ANY = рдПрдХ рдЬрд░реА match, ALL = рд╕рдЧрд│рдВрдЪ match.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп = ANY (10,12);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]} },

{ id:"union", title:"UNION ЁЯдЭ", emoji:"", desc:"UNION рдореНрд╣рдВрдЬреЗ abe bhaitad рджреЛрди result рдорд┐рдХреНрд╕ рдХрд░рд╛рдпрдЪреЗ.", longDesc:"UNION рджреЛрди queries рдПрдХрддреНрд░ рдХрд░рддреЛ рдкрдг duplicates рдХрд╛рдЧрджрд╛рд╕рд╛рд░рдЦрдВ рдлреЗрдХрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"]]} },

{ id:"unionall", title:"UNION ALL ЁЯФЧ", emoji:"", desc:"UNION ALL рд╡рд╛рдкрд░рд▓рдВ рдХреА abe jhakola duplicate рдкрдг рд░рд╛рд╣рддрд╛рдд.", longDesc:"UNION ALL queries рдЪрд┐рдХрдЯрд╡рддреЛ рд╕рдЧрд▓реНрдпрд╛рд╕рдХрдЯ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA UNION ALL SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"],["Sneha"]]} },

{ id:"intersect", title:"INTERSECT тЬВя╕П", emoji:"", desc:"INTERSECT рдореНрд╣рдВрдЬреЗ рдХреЙрдорди value, abe pongya.", longDesc:"рджреЛрди queries рдордзрд▓рдВ common рдЭрдХрд╛рд╕ рдлрдХреНрдд рд╣рд╛рдЪ рджреЗрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA INTERSECT SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Rohit"]]} },

{ id:"minus", title:"MINUS тЮЦ", emoji:"", desc:"MINUS рдореНрд╣рдВрдЬреЗ abe bhaitad рдкрд╣рд┐рд▓реНрдпрд╛рддрд▓рдВ рджреБрд╕рд▒реНрдпрд╛рдд рдирд╛рд╣реА рддреЗ.", longDesc:"MINUS рдкрд╣рд┐рд▓реНрдпрд╛рддрд▓рдВ data рдареЗрд╡рддреЛ рджреБрд╕рд▒реНрдпрд╛рддрд▓рдВ рдХрд╛рдвреВрди рдЯрд╛рдХрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАA MINUS SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереАB;", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"],["Amruta"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Amruta"]]} },

{ id:"not", title:"NOT тЭМ", emoji:"", desc:"NOT рдореНрд╣рдВрдЬреЗ рдЙрд▓рдЯреА рдЕрдЯ, abe dengnya.", longDesc:"NOT рд╡рд╛рдкрд░рд▓рдВ рдХреА рд╣реЗ рдирдХреЛ рддрдВ data рдЙрдбрд╡рддреЛ. рдЙрджрд╛. NOT IN value рдХрд╛рдвреВрди рдЯрд╛рдХрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рд╡рдп NOT IN (10);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Rohit"]]} },

{ id:"exists", title:"EXISTS тЬЕ", emoji:"", desc:"EXISTS рднрд╛рдп, subquery рдХрдбрдВ рдХрд╛рд╣реА рдЖрд▓рдВрдп рдХрд╛ рдирд╛рд╣реА рддреЗ рдмрдШрд╛рдпрдЪрдВ.", longDesc:"EXISTS рдЯрд╛рдХрд▓рдВ рдХреА subquery result рдЖрд▓рд╛ рддрд░реАрдЪ rows рджрд┐рд╕рддрд╛рдд.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>80);", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]} },

{ id:"notexists", title:"NOT EXISTS ЁЯЪл", emoji:"", desc:"NOT EXISTS рдореНрд╣рдВрдЬреЗ abe pongya subquery рд░рд┐рдХрд╛рдордВ рдЖрд▓рдВ рддрд░ рдЪрд╛рд▓рддрдВ.", longDesc:"NOT EXISTS check рдХрд░рддреЛ рдХреА рдХрд╛рд╣реА data рдкрд░рдд рдЖрд▓рдВ рдирд╛рд╣реА рддрд░рдЪ row рдкрдХрдбрддреЛ.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE NOT EXISTS (SELECT 1 FROM рдЧреБрдг WHERE рдЧреБрдг>90);", before:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]}, after:{headers:["рдирд╛рд╡"], rows:[["Sneha"],["Rohit"]]} },

{ id:"null", title:"NULL Values ЁЯХ│я╕П", emoji:"", desc:"NULL рдореНрд╣рдВрдЬреЗ рд░рд┐рдХрд╛рдордВ, рднрд╛рдп.", longDesc:"NULL check рдХрд░рддрдВ рдХреА value рдирд╛рд╣реА рдЖрд▓реА рддрд░ рдХрд╛ рдЖрд╣реЗ. Null рдорд╕реНрдд рд╕рд╛рдВрдЧрддреЛ рдХреБрдардВ рдХрд╛рд╣реАрдЪ рдирд╛рд╣реА.", example:"SELECT рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдкрддреНрддрд╛ IS NULL;", before:{headers:["рдирд╛рд╡","рдкрддреНрддрд╛"], rows:[["Sneha","Mumbai"],["Amruta",null]]}, after:{headers:["рдирд╛рд╡"], rows:[["Amruta"]]} },

{ id:"insert", title:"INSERT INTO тЮХ", emoji:"", desc:"INSERT рдореНрд╣рдВрдЬреЗ abe dengnya рдирд╡рдВ data рдШреБрд╕рдбрд╛рдпрдЪрдВ.", longDesc:"INSERT INTO рд╡рд╛рдкрд░реВрди рдЭрдХрд╛рд╕ рдирдпрд╛ row рдЯрд╛рдХрддрд╛ рдпреЗрддреЛ.", example:"INSERT INTO рд╡рд┐рджреНрдпрд╛рд░реНрдереА (рдирд╛рд╡, рд╡рдп) VALUES ('Ajay', 11);", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Ajay","11"]]} },

{ id:"update", title:"UPDATE тЬПя╕П", emoji:"", desc:"UPDATE рдореНрд╣рдВрдЬреЗ рдЬреБрдирд╛ рдорд╛рд▓ рдмрджрд▓рд╛рдпрдЪрдВ рдХрд╛рдо рднрд╛рдИрддрд╛рдб.", longDesc:"UPDATE рдЯрд╛рдХрд▓рдВ рдХреА data рдмрджрд▓рддреЛ. WHERE рдирд╕рд▓рдВ рддрд░ рд╕рдЧрд│рдВрдЪ рдмрджрд▓рддрдВ рдкреБрдВрдЧреНрдпрд╛.", example:"UPDATE рд╡рд┐рджреНрдпрд╛рд░реНрдереА SET рд╡рдп = 13 WHERE рдирд╛рд╡ = 'Rohit';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","13"]]} },

{ id:"delete", title:"DELETE ЁЯЧСя╕П", emoji:"", desc:"DELETE рдЯрд╛рдХрд▓рдВ рдХреА abe jhakola рдЬреБрдирд╛ рдорд╛рд▓ рдХрд╛рдвреВрди рдЯрд╛рдХрд╛рдпрдЪрд╛.", longDesc:"DELETE rows рдЙрдбрд╡рддреЛ. WHERE рдирд╛рд╣реА рджрд┐рд▓рдВ рддрд░ рд╕рдЧрд│рдЪрдВ рдЦрддрдо.", example:"DELETE FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА WHERE рдирд╛рд╡ = 'Ajay';", before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Ajay","11"]]}, after:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"]]} },

{ id:"innerjoin", title:"INNER JOIN ЁЯФЧ", emoji:"", desc:"INNER JOIN рдореНрд╣рдВрдЬреЗ abe jhakola рджреЛрди table рдордзрд▓рдВ рдХреЙрдорди data.", 
longDesc:"INNER JOIN рд╡рд╛рдкрд░рд▓рдВ рдХреА рджреЛрди table рдордзрд▓реЗ common rows рдЙрдЪрд▓рддреЛ. рдирд╛рд╣реА match рдЭрд╛рд▓рдВ рддрд░ рджрд╛рд░рд╛рддреБрди рдкрд│рд╡рд▓рдВ рдЬрд╛рддрдВ рднрд╛рдИрддрд╛рдб.", 
example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА INNER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", 
before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta","4","88"]]}, 
after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["Sneha","85"],["Rohit","90"]]} },

{ id:"leftjoin", title:"LEFT JOIN тмЕя╕П", emoji:"", desc:"LEFT JOIN рдореНрд╣рдВрдЬреЗ abe dengnya left tableрдЪрдВ рд╕рдЧрд│рдВ + right рдордзрд▓рдВ рдЬреБрд│рд▓рдВ рддреЗрд╡рдврдВ.", 
longDesc:"LEFT JOIN рдХрд░рддрдВ left table рд▓рд╛ full support bhaitad! Right table match рдирд╕рд▓рдВ рддрд░ NULL рдкрд╛рдард╡реВрди рджреЗрддреЛтАжрдкреБрдВрдЧреНрдпрд╛.", 
example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА LEFT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", 
before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta",null,null]]}, 
after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["Sneha","85"],["Rohit","90"],["Amruta",null]]} },

{ id:"rightjoin", title:"RIGHT JOIN тЮбя╕П", emoji:"", desc:"RIGHT JOIN рдореНрд╣рдВрдЬреЗ abe bhaitad right table рд░рд╛рдЬрд╛ рдмрдирддреЛ.", 
longDesc:"RIGHT JOIN рдЯрд╛рдХрд▓рдВ рдХреА right tableрдЪрдВ рд╕рдЧрд│рдВ рдЖрд▓рдВ. Left рдирд╕рд▓рдВ рддрд░ NULL рдЯрд╛рдХрддрдВ, pongya.", 
example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА RIGHT JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", 
before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],[null,null,"4","88"]]}, 
after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["Sneha","85"],["Rohit","90"],[null,"88"]]} },

{ id:"fulljoin", title:"FULL OUTER JOIN ЁЯМР", emoji:"", desc:"FULL JOIN рдореНрд╣рдВрдЬреЗ abe pongya рджреЛрдиреНрд╣реА tables рдЪрдВ рд▓рдЧреНрди тАУ рд╕рдЧрд│рдВ рдЖрд▓рдВ рдирд╛рд╣реА match рдЭрд╛рд▓рдВ рддрд░реА.", 
longDesc:"FULL OUTER JOIN рднрд╛рдп рджреЛрдиреНрд╣реА tables рд▓рд╛ рдПрдХрддреНрд░ рдЖрдгрддреЛ, match рдирд╕рд▓рдВ рддрд░реА NULL рджреЗрддреЛ. рдЭрдХрд╛рд╕ рд╕рдореЗрдЯ.", 
example:"SELECT рд╡рд┐рджреНрдпрд╛рд░реНрдереА.рдирд╛рд╡, рдЧреБрдг.рдЕрдВрдХ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА FULL OUTER JOIN рдЧреБрдг ON рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id = рдЧреБрдг.vid;", 
before:{headers:["рд╡рд┐рджреНрдпрд╛рд░реНрдереА.id","рдирд╛рд╡","рдЧреБрдг.vid","рдЕрдВрдХ"], rows:[["1","Sneha","1","85"],["2","Rohit","2","90"],["3","Amruta",null,null],[null,null,"4","88"]]}, 
after:{headers:["рдирд╛рд╡","рдЕрдВрдХ"], rows:[["Sneha","85"],["Rohit","90"],["Amruta",null],[null,"88"]]} },

{ id:"selfjoin", title:"SELF JOIN ЁЯФД", emoji:"", desc:"SELF JOIN рдореНрд╣рдВрдЬреЗ abe dengnya рдЯреЗрдмрд▓рдирдВ рд╕реНрд╡рдд:рд▓рд╛рдЪ рдорд┐рдареА рдорд╛рд░рд▓реА.", 
longDesc:"SELF JOIN рд╡рд╛рдкрд░рд▓реЛ рдХреА рдПрдХрдЪ table рджреБрд╕рд▒реНрдпрд╛ copy рд╕реЛрдмрдд рдЬреЛрдбрддрдВтАж рдЭрдХрд╛рд╕ рддреБрд▓рдирд╛ рд╣реЛрдКрди рдЬрд╛рддреЗ рднрд╛рдп!", 
example:"SELECT A.рдирд╛рд╡, B.рдирд╛рд╡ FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА A JOIN рд╡рд┐рджреНрдпрд╛рд░реНрдереА B ON A.рд╡рдп = B.рд╡рдп;", 
before:{headers:["id","рдирд╛рд╡","рд╡рдп"], rows:[["1","Sneha","10"],["2","Rohit","12"],["3","Amruta","12"]]}, 
after:{headers:["A.рдирд╛рд╡","B.рдирд╛рд╡"], rows:[["Rohit","Amruta"],["Amruta","Rohit"]]} },

// ЁЯЪА Aggregate Functions
{ id:"count", title:"COUNT() ЁЯФв", emoji:"", desc:"COUNT рдореНрд╣рдВрдЬреЗ abe bhaitad rows рдЪреА рдореЛрдЬрджрд╛рдж.", 
longDesc:"COUNT рдлрдВрдХреНрд╢рди рд╕рд╛рдВрдЧрддрдВ table рдордзреНрдпреЗ рдХрд┐рддреА рдУрд│реА рдЖрд╣реЗрдд. рдЭрдХрд╛рд╕ рд╣рд┐рд╢реЗрдм!", 
example:"SELECT COUNT(*) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", 
before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, 
after:{headers:["COUNT"], rows:[["3"]]} },

{ id:"sum", title:"SUM() тЮХ", emoji:"", desc:"SUM рдореНрд╣рдВрдЬреЗ abe pongya рдЖрдХрдбрд╛ рдПрдХрддреНрд░ рдХрд░реВрди рдЬреЛрдбрд╛рдпрдЪрд╛.", 
longDesc:"SUM рдлрдВрдХреНрд╢рди рдЪрдХреНрдХ рдЖрдХрдбреНрдпрд╛рдВрдЪрд╛ total рджреЗрддреЛ. рдПрдХрджрдо рдЭрдХрд╛рд╕ рд╣рд┐рд╕рд╛рдм.", 
example:"SELECT SUM(рд╡рдп) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", 
before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, 
after:{headers:["SUM"], rows:[["33"]]} },

{ id:"avg", title:"AVG() ЁЯУК", emoji:"", desc:"AVG рдореНрд╣рдВрдЬреЗ abe dengnya рд╕рд░рд╛рд╕рд░реА рдХрд╛рдврд╛рдпрдЪреА.", 
longDesc:"AVG рдлрдВрдХреНрд╢рди рдбреЗрдЯрд╛ рдЪрдВ рд╕рд░рд╛рд╕рд░реА value рджреЗрддреЛ. рдПрдХрджрдо рд╢рд╛рдВрдд рдЧрдгрд┐рдд.", 
example:"SELECT AVG(рд╡рдп) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", 
before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, 
after:{headers:["AVG"], rows:[["11"]]} },

{ id:"min", title:"MIN() тмЗя╕П", emoji:"", desc:"MIN рдореНрд╣рдВрдЬреЗ рднрд╛рдИрддрд╛рдб рд╕рдЧрд│реНрдпрд╛рдд рд▓рд╣рд╛рди value рд╢реЛрдзрд╛рдпрдЪрдВ.", 
longDesc:"MIN рдлрдВрдХреНрд╢рди рдбреЗрдЯрд╛ рдордзрд▓рдВ рдХрдореАрдЪрдВ рдХрдореА value рд╕рд╛рдВрдЧрддреЛ. рдПрдХрджрдо jhakola рдЫреЛрдЯрд╛.", 
example:"SELECT MIN(рд╡рдп) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", 
before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, 
after:{headers:["MIN"], rows:[["10"]]} },

{ id:"max", title:"MAX() тмЖя╕П", emoji:"", desc:"MAX рдореНрд╣рдВрдЬреЗ abe bhaitad рд╕рдЧрд│реНрдпрд╛рдд рдореЛрдард╛ value.", 
longDesc:"MAX рдлрдВрдХреНрд╢рди data рдордзрд▓рдВ ultimate рдЯрд╛рдХрд╛рдК рдореЛрдардВ value рджрд╛рдЦрд╡рддреЛ тАФ рдПрдХрджрдо raigadacha raja.", 
example:"SELECT MAX(рд╡рдп) FROM рд╡рд┐рджреНрдпрд╛рд░реНрдереА;", 
before:{headers:["рдирд╛рд╡","рд╡рдп"], rows:[["Sneha","10"],["Rohit","12"],["Amruta","11"]]}, 
after:{headers:["MAX"], rows:[["12"]]} }

],
 // Placeholder for future content
  mb: [ "hi"], // Placeholder for future content  
  hy: [ "hi"], // Placeholder for future content
  np: [ "hi"], // Placeholder for future content
};  

// Add placeholder lessons for Mumbaiya, Hyderabadi, and Nagpuri
["mb", "hy", "np"].forEach(lang => {
  if (lang === "mb") {
    lessons[lang] = [
      {
        id: "comingsoon",
        title: "Lessons Coming Soon ЁЯЪА",
        emoji: "тП│",
        desc: "Abe bhidu, lessons jaldi aayenge!",
        longDesc: "Hum SQL lessons Mumbaiya style mein laane ki tayari kar rahe hain. Thoda intezaar karo!",
        example: "-- Abhi koi example nahi hai --",
        before: { headers: ["Column1", "Column2"], rows: [["--", "--"]] },
        after: { headers: ["Column1", "Column2"], rows: [["--", "--"]] }
      }
    ];
  } else if (lang === "hy") {
    lessons[lang] = [
      {
        id: "comingsoon",
        title: "Lessons Coming Soon ЁЯЪА",
        emoji: "тП│",
        desc: "Arrey miyan, lessons jaldi aane waale hain!",
        longDesc: "Hyderabadi style mein SQL lessons laane ki tayari ho rahi hai. Thoda sabr karo miyan!",
        example: "-- Abhi koi example nahi hai --",
        before: { headers: ["Column1", "Column2"], rows: [["--", "--"]] },
        after: { headers: ["Column1", "Column2"], rows: [["--", "--"]] }
      }
    ];
  } else if (lang === "np") {
    lessons[lang] = [
      {
        id: "comingsoon",
        title: "Lessons Coming Soon ЁЯЪА",
        emoji: "тП│",
        desc: "Abe mama, lessons jaldi aayenge!",
        longDesc: "Nagpuri style mein SQL lessons laane ki tayari ho rahi hai. Thoda ruk ja mama!",
        example: "-- Abhi koi example nahi hai --",
        before: { headers: ["Column1", "Column2"], rows: [["--", "--"]] },
        after: { headers: ["Column1", "Column2"], rows: [["--", "--"]] }
      }
    ];
  }
});
// DOM Elements
const landing = document.getElementById("landing");
const app = document.getElementById("app");
const topicList = document.getElementById("topicList");
const lessonArea = document.getElementById("lessonArea");
const contentTitle = document.querySelector(".content-title");
const contentSub = document.querySelector(".content-sub");
const langBtns = document.querySelectorAll(".btn");
document.addEventListener("DOMContentLoaded", function() {
  // ...your code here...
});

// Language selection
langBtns.forEach(btn => {
  btn.addEventListener("click", () => {
    const lang = btn.dataset.lang;
    if (lang === "mr" || lang === "hi" || lang === "en" || lang === "vr"
    || lang === "mb" || lang === "hy" || lang === "np") {
      currentLang = lang;
      landing.classList.add("hide");
      app.classList.add("show");
      document.getElementById("topicsTitle").textContent = `SQL - ${langNames[lang]}`;
      loadTopics();

      // ЁЯСЗ Reset main page text according to selected language
      contentTitle.textContent = startTexts[currentLang].title;
      contentSub.textContent = startTexts[currentLang].sub;
      lessonArea.innerHTML = ""; // clear any old lesson
    }
  });
});


// Load topics in sidebar
function loadTopics() {
  topicList.innerHTML = "";
  lessons[currentLang].forEach((lesson, idx) => {
    const li = document.createElement("li");
    li.innerHTML = `<span class="emoji">${lesson.emoji}</span> ${lesson.title}`;
    li.addEventListener("click", () => selectLesson(idx, li));
    topicList.appendChild(li);
  });
}

// When topic is clicked
// ...existing code...
function selectLesson(index, element) {
  // Reset active
  topicList.querySelectorAll("li").forEach(li => li.classList.remove("active"));
  element.classList.add("active");

  const lesson = lessons[currentLang][index];

  // Update lesson heading and description
  contentTitle.innerHTML = `${lesson.emoji} ${lesson.title}`;
  contentSub.innerHTML = `<p>${lesson.longDesc}</p>`;

  lessonArea.innerHTML = `
    <div class="example-block">
      <strong>SQL Example:</strong>
      <code>${lesson.example}</code>
      <p class="output-caption before">Before:</p>
      ${makeTable(lesson.before.headers, lesson.before.rows)}
      <p class="output-caption after">After:</p>
      ${makeTable(lesson.after.headers, lesson.after.rows)}
    </div>
  `;
}
// ...existing code...

// Generate table HTML
function generateTable(data) {
  let html = "<table class='sql-output'><thead><tr>";
  data.headers.forEach(h => html += `<th>${h}</th>`);
  html += "</tr></thead><tbody>";
  data.rows.forEach(row => {
    html += "<tr>";
    row.forEach(cell => html += `<td>${cell === null ? "NULL" : cell}</td>`);
    html += "</tr>";
  });
  html += "</tbody></table>";
  return html;
}




// Add responsive design for mobile
function setupResponsiveDesign() {
  const sidebar = document.getElementById("sidebar");
  const toggleButton = document.createElement("button");
  toggleButton.id = "sidebarToggle";
  toggleButton.textContent = "тШ░";
  toggleButton.classList.add("sidebar-toggle");

  // Add toggle button to the header
  document.querySelector("header").prepend(toggleButton);

  // Toggle sidebar visibility on button click
  toggleButton.addEventListener("click", () => {
    sidebar.classList.toggle("show");
  });

  // Close sidebar when clicking outside on mobile
  document.addEventListener("click", (event) => {
    if (!sidebar.contains(event.target) && !toggleButton.contains(event.target)) {
      sidebar.classList.remove("show");
    }
  });
}

// Call the function on DOMContentLoaded
document.addEventListener("DOMContentLoaded", setupResponsiveDesign);
